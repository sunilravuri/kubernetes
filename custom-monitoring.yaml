apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  annotations:
    prometheus-operator-validated: "true"
  creationTimestamp: "2021-11-02T05:26:15Z"
  generation: 7
  managedFields:
  - apiVersion: monitoring.coreos.com/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:prometheus-operator-validated: {}
      f:spec:
        .: {}
        f:groups: {}
    manager: agent
    operation: Update
    time: "2021-10-13T18:36:53Z"
  name: custom-monitoring
  namespace: prod-siebel
  resourceVersion: "24570577"
  selfLink: /apis/monitoring.coreos.com/v1/namespaces/prod-siebel/prometheusrules/custom-monitoring
  uid: 08787efb-30f6-45c6-afd6-733f20053c6e
spec:
  groups:
  - name: PodStatus
    rules:
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
          not matched the expected number of replicas for longer than 5 minutes.
        runbook_url: http://sparancher.aa.com
        summary: Deployment has not matched the expected number of replicas.
      expr: (kube_deployment_spec_replicas{job="kube-state-metrics",namespace=~".*"}
        != kube_deployment_status_replicas_available{job="kube-state-metrics",namespace=~".*"})
        and (changes(kube_deployment_status_replicas_updated{job="kube-state-metrics",namespace=~".*"}[5m])
        == 0)
      for: 300s
      labels:
        severity: warning
        type: pod
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }}
          has not matched the expected number of replicas for longer than 5 minutes.
        runbook_url: http://sparancher.aa.com
        summary: Deployment has not matched the expected number of replicas.
      expr: (kube_statefulset_status_replicas_ready{job="kube-state-metrics",namespace=~".*"}
        != kube_statefulset_status_replicas{job="kube-state-metrics",namespace=~".*"})
        and (changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics",namespace=~".*"}[5m])
        == 0)
      for: 300s
      labels:
        severity: warning
        type: pod
    - alert: CPUThrottlingHigh
      annotations:
        description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
          {{ $labels.namespace }} for container {{ $labels.container }} in pod {{
          $labels.pod }}.'
        runbook_url: http://sparancher.aa.com
        summary: Processes experience elevated CPU throttling.
      expr: sum by(container, pod, namespace) (increase(container_cpu_cfs_throttled_periods_total{container!=""}[10m]))
        / sum by(container, pod, namespace) (increase(container_cpu_cfs_periods_total[5m]))
        > (80 / 100)
      for: 300s
      labels:
        severity: warning
        type: pod
    - alert: PodRestart
      annotations:
        description: '"Pod {{ $labels.pod_name }} , container {{ $labels.container_name
          }} restarted more than once in last 5 minutes'
        summary: Pod Restarted
      expr: '  delta(kube_pod_container_status_restarts_total[5m]) > 1'
      for: 300s
      labels:
        severity: critical
        type: pod
    - alert: ContainerMemoryUsage
      annotations:
        description: '"Container Memory usage is above 80%\n  VALUE = {{ $value }}"'
        summary: Container Memory usage (instance {{ $labels.instance }})
      expr: (sum(container_memory_working_set_bytes) BY (instance, pod, namespace)
        / sum(container_spec_memory_limit_bytes > 0) BY (instance, pod) * 100) > 80
      for: 300s
      labels:
        severity: warning
        type: pod
    - alert: CPUThrottlingVeryHigh
      annotations:
        description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
          {{ $labels.namespace }} for container {{ $labels.container }} in pod {{
          $labels.pod }}.'
        summary: Processes experience elevated CPU throttling.
      expr: sum by(container, pod, namespace) (increase(container_cpu_cfs_throttled_periods_total{container!=""}[10m]))
        / sum by(container, pod, namespace) (increase(container_cpu_cfs_periods_total[5m]))
        > (90 / 100)
      for: 300s
      labels:
        severity: critical
        type: pod
    - alert: ContainerMemoryUsageHigh
      annotations:
        description: '"Container Memory usage is above 80%\n  VALUE = {{ $value }}"'
        summary: Container Memory usage (instance {{ $labels.instance }})
      expr: (sum(container_memory_working_set_bytes) BY (instance, pod, namespace)
        / sum(container_spec_memory_limit_bytes > 0) BY (instance, pod) * 100) > 90
      for: 300s
      labels:
        severity: critical
        type: pod
